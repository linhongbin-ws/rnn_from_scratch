classdef FFNNLayer
    properties
    Weight_layers = {}
    Bias_Layers = {}
    activation_fun_str_list = {}
    activation_fun_obj_list = {}
    methods       
        function out = forward(obj, x)
            a = x;
            a_list = {x};
            y_list = {};
            for i = 1:obj.hidden_layer_num+1
                y = obj.mulgate.forward(obj.Weight_layers{i}, a);
                y = obj.addgate.forward(y, obj.Bias_Layers{i});
                a = obj.activation_fun_obj_list{i}.forward(y);
                y_list{end+1} = y;
                a_list{end+1} = a;
            end
        end
        function bottom_delta = backward(obj, x, top_delta)
            f_o = obj.forward(x);
            bottom_delta = top_delta.*(1 - f_o.^2);
        end
    end
end

